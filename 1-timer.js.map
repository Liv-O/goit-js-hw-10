{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nconst btnStart = document.querySelector('.btn-start');\nconst dataSpan = [...document.querySelectorAll('.value')];\nconst inp = document.querySelector(\"#datetime-picker\");\nlet userSelectedDate, userTime;\n\nlet now = Date.now();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    userTime = userSelectedDate.getTime();\n    if (userTime < now) {\n      //window.alert(\"Please choose a date in the future\");\n      iziToast.show({\n         title: 'X',\n        message: 'Please choose a date in the future',\n        color: 'red',\n      });\n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n    }\n    \n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n\n\nfunction startFunc() {\n  btnStart.disabled = true;\n  inp.disabled = true;\n  const intervalId = setInterval(() => {\n\n    const restTime = userTime - Date.now();\n    const convertTime = convertMs(restTime);\n    for (let [text, num] of Object.entries(convertTime)) {\n      \n      dataSpan.find((el) => el.hasAttribute(`data-${text}`)).textContent = addLeadingZero(num);\n      \n    }\n    if (Object.values(convertTime).every(value => Number(value) === 0)) {\n      inp.disabled = false;\n      clearInterval(intervalId);\n    }\n    \n \n  }, 1000);\n\n\n}\n\nbtnStart.addEventListener('click', startFunc);"],"names":["btnStart","dataSpan","inp","userSelectedDate","userTime","now","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","startFunc","intervalId","restTime","convertTime","text","num","el"],"mappings":"0IAYA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAW,CAAC,GAAG,SAAS,iBAAiB,QAAQ,CAAC,EAClDC,EAAM,SAAS,cAAc,kBAAkB,EACrD,IAAIC,EAAkBC,EAElBC,EAAM,KAAK,MAEf,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BJ,EAAmBI,EAAc,CAAC,EAClCH,EAAWD,EAAiB,UACxBC,EAAWC,GAEbG,EAAS,KAAK,CACX,MAAO,IACR,QAAS,qCACT,MAAO,KACf,CAAO,EACDR,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAGvB,CACH,EAEAS,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAIA,SAASC,GAAY,CACnBlB,EAAS,SAAW,GACpBE,EAAI,SAAW,GACf,MAAMiB,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAWhB,EAAW,KAAK,IAAG,EAC9BiB,EAAcX,EAAUU,CAAQ,EACtC,OAAS,CAACE,EAAMC,CAAG,IAAK,OAAO,QAAQF,CAAW,EAEhDpB,EAAS,KAAMuB,GAAOA,EAAG,aAAa,QAAQF,CAAI,EAAE,CAAC,EAAE,YAAcN,EAAeO,CAAG,EAGrF,OAAO,OAAOF,CAAW,EAAE,MAAMJ,GAAS,OAAOA,CAAK,IAAM,CAAC,IAC/Df,EAAI,SAAW,GACf,cAAciB,CAAU,EAI3B,EAAE,GAAI,CAGT,CAEAnB,EAAS,iBAAiB,QAASkB,CAAS"}